<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.JYProject.project.repository.mybatis.BoardMapperRepository">
    <resultMap id="boardResultMap" type="com.JYProject.project.model.Board">
        <id property="boardId" column="board_id"/>
        <result property="categoryId" column="category_id"/>
        <result property="writer" column="writer"/>
        <result property="memberId" column="member_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>
        <result property="viewCnt" column="view_cnt"/>
        <result property="likes" column="likes"/>
        <result property="dislikes" column="dislikes"/>
    </resultMap>

    <!--보드 추가 -->
    <insert id="insertBoard" parameterType="com.JYProject.project.model.Board">
        insert into board (category_id,writer,title,content,member_id)
        values(#{categoryId},#{writer},#{title},#{content},#{memberId});
    </insert>
    <!--보드 1개의값 가져오기 -->
    <select id="selectBoardDetail" parameterType="Long" resultMap="boardResultMap">
        select * from board where board_id=#{boardId};
    </select>
    <!--보드 수정 -->
    <update id="updateBoard" parameterType="com.JYProject.project.model.Board">
        update board
        set title=#{title},
            content=#{content},
            update_date = NOW()
        WHERE board_id = #{boardId}
    </update>
    <!--보드 삭제시킬떄 값 넣어주기 -->
    <update id="deleteBoard" parameterType="Long">
    update board
    set board.delete_date = now()
    where board_id = #{boardId};
    </update>
    <update id="boardViewCntIncrease" parameterType="Long">
    update board
        set view_cnt = view_cnt+1
    where board_id=#{boardId};

    </update>
    <select id="boardAllList" resultMap="boardResultMap">
        select  * from board
    </select>

    <select id="selectBoardTotalCount" resultType="Integer">
        select count(*) board;
    </select>
    <select id="getLikesTotalCount" parameterType="Long" resultType="Integer">
       select count(*),likes from board where board_id=#{boardId}
    </select>

    <select id="getDisLikesTotalCount" parameterType="Long" resultType="Integer">
        select count(*), dislikes from board where board_id=#{boardId}
     </select>
    <!-- 검색 할경우 리스트를 가져온다 -->
    <select id="boardSearchAllList" parameterType="String" resultMap="boardResultMap">
        SELECT * FROM board
        WHERE title LIKE CONCAT('%', #{title}, '%') or content LIKE CONCAT('%',#{content},'%')
    </select>
    <select id="boardSearchWriterList" parameterType="String" resultMap="boardResultMap">
        SELECT * FROM board
        WHERE writer LIKE CONCAT('%', #{writer}, '%')
    </select>
    <select id="boardSearchTitleList" parameterType="String" resultMap="boardResultMap">
        SELECT * FROM board
        WHERE title LIKE CONCAT('%', #{title}, '%')
    </select>
    <select id="boardSearchContentList" parameterType="String" resultMap="boardResultMap">
    select * from board
    where content LIKE  CONCAT('%', #{content},'%')
    </select>

        <select id="boardGetCategoryList" parameterType="Integer" resultMap="boardResultMap">
                    select * from board
                   <if test="categoryId != 0">
                   where  category_id=#{categoryId};
                        </if>
                </select>
    <select id="getMyBoardList" parameterType="Long" resultMap="boardResultMap">
        select * from board where member_id=#{memberId};

    </select>


    <select id="getWeekBestBoardList" parameterType="map" resultMap="boardResultMap">
        SELECT *, (`likes` - disLikes) AS LikeCount
        FROM board
        <where>
            <if test="categoryId != 0">
                category_id=#{categoryId}
                AND reg_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        </if>
            <if test="categoryId == 0">
                    reg_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        </if>
        </where>
        ORDER BY LikeCount DESC
        LIMIT #{offset}, #{pageSize};
    </select>
    <select id="getDailyBestBoardList" parameterType="map" resultMap="boardResultMap">
        SELECT *, (`likes` - disLikes) AS LikeCount
        FROM board
        <where>
            <if test="categoryId != 0">
                category_id = #{categoryId}
                AND reg_date = CURDATE()
            </if>
            <if test="categoryId == 0">
                reg_date = CURDATE()
            </if>
        </where>
        ORDER BY LikeCount DESC
        LIMIT #{offset}, #{pageSize};
    </select>
</mapper>