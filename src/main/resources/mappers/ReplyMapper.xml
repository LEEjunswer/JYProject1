<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.JYProject.project.repository.ReplyRepository.ReplyMapperRepository">
    <resultMap id="replyResultMap" type="com.JYProject.project.model.Reply">
        <id property="replyId" column="reply_id"/>
        <result property="boardId" column="board_id"/>
        <result property="memberId" column="member_id"/>
        <result property="content" column="content"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="deleteDate" column="delete_date"/>
<association property="memberInfo"  javaType="com.JYProject.project.model.Member" resultMap="memberResultInfo"/>
        <!--        <result property="likes" column="likes"/>
        <result property="disLikes" column="dislikes"/>-->
    </resultMap>
    <resultMap id="memberResultInfo" type="com.JYProject.project.model.Member">
        <id column="member_id" property="memberId" />
        <result column="nickname" property="nickname" />

    </resultMap>

    <insert id="insertReply" parameterType="com.JYProject.project.model.Reply">
       insert into reply (board_id, member_id, content) values
            (#{boardId},#{memberId},#{content})
    </insert>
    <select id="selectOneReply" parameterType="Long" resultType="com.JYProject.project.model.Reply">
    select  * from reply where reply_id=#{id}
    </select>

    <select id="getBoardAllReply" parameterType="Long" resultMap="replyResultMap">
        SELECT r.*, m.nickname
        FROM reply r
                 INNER JOIN member m ON r.member_id = m.member_id
        WHERE r.board_id = #{boardId};
    </select>
    <!--댓글 수정 -->
    <update id="updateReply" parameterType="com.JYProject.project.model.Reply">
        update reply
        set content=#{content},
            update_date = NOW()
        where reply_id=#{replyId};
    </update>
    <!--댓글 삭제 -->
    <update id="deleteReply" parameterType="Long">
        update reply
        set  delete_date = NOW()
        where reply_id=#{replyId};
    </update>

    <select id="getMyReplyList" parameterType="Long" resultMap="replyResultMap">
        select r.*, m.nickname
        from reply r
                 inner join member m on r.member_id = m.member_id
        where r.board_id = #{boardId} and delete_date is null;
    </select>
    <select id="getMyReplyCount" parameterType="Long" resultType="Integer">
        select count(*) from reply where member_id=#{memberId}  and delete_date IS NULL;
    </select>

    <!-- 밑은 아직 미구현 좀 더 공부를 하고 해보자-->
    <select id="replyLikesTotalCount" parameterType="Long" resultType="Integer">
    select count(*),likes from reply where reply_id=#{id};
    </select>
    <select id="replyDisLiesTotalCount" parameterType="Long" resultType="Integer">
        select count(*),dislikes from reply where  reply_id=#{id};
    </select>

    <select id="getOneBoardReplyCount" parameterType="Long" resultType="Integer">
        select count(*) from reply where board_id = #{boardId};
    </select>
    <select id="getOneBoardReply" parameterType="map" resultMap="replyResultMap">
        select * from reply where board_id=#{boardId} ORDER BY reg_date DESC
        LIMIT #{offset}, #{pageSize};
    </select>
    <!--삭제하는 것이 아닌 deleted_date로 전부 저장-->
    <update id="replyDeleteFindMemberId" parameterType="Long">
            update reply
            set delete_date = now()
    where member_id=#{memberId}  and delete_date is null;
    </update>
</mapper>
